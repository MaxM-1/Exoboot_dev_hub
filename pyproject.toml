[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "exoboot-perception-experiment"
version = "1.0.0"
description = "A comprehensive package for conducting human perception experiments using the Dephy Exoboot powered ankle exoskeleton"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Max M", email = "your.email@example.com"},  # Replace with your actual email
]
maintainers = [
    {name = "Max M", email = "your.email@example.com"},  # Replace with your actual email
]
keywords = [
    "exoskeleton",
    "biomechanics", 
    "human-robot-interaction",
    "perception",
    "gait-analysis",
    "dephy",
    "flexsea"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Human Machine Interfaces",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "pyserial>=3.5",
    "tk>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/exoboot-perception-experiment"  # Update with your GitHub username
Repository = "https://github.com/yourusername/exoboot-perception-experiment.git"  # Update with your GitHub username
Documentation = "https://exoboot-perception-experiment.readthedocs.io/"
"Bug Tracker" = "https://github.com/yourusername/exoboot-perception-experiment/issues"  # Update with your GitHub username

[project.scripts]
exoboot-experiment = "exoboot_perception.gui:main"

[tool.hatch.build.targets.wheel]
packages = ["src/exoboot_perception"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/scripts",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "flexsea.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tkinter.*"
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/exoboot_perception",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/exoboot_perception"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]